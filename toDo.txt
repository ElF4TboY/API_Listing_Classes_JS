A voir quand j'en serais au frontend
pour les models
NoteBoard
  studentId: { type: String, required: true },
    -> foreign key = j'utilise l'id de l'élève;
  frenchMarks: [Number],
  mathMarks: [Number],
  scienceMarks: [Number],

Student
  classId: { type: String, required: true },
    -> foreign key = j'utilise l'id de la classe;
  studentId: { type: String, required: true },
    -> pas d'utilité pour ici, j'utiliserai l'id de l'élève en foreign key noteBoard;
  firstname: { type: String, required: true },
  surname: { type: String, required: true },

Classroom
  classId: { type: String, required: true },
    -> pas d'utilité pour ici, j'utiliserai l'id de la classe en foreign key student;
  name: { type: String, required: true },
-----------------------------------------------------------------------------------
Configurer .env pour TS
-----------------------------------------------------------------------------------
Gérer les erreurs avec les bons status
-----------------------------------------------------------------------------------
pour les routes, trop de répétitions. Voir pour créer des classe

https://chtgupta.medium.com/dynamic-routing-and-schema-plugins-using-mongoose-typescript-and-express-dd01afd8cd3c
-----------------------------------------------------------------------------------
dynamic rendering

https://codeforgeek.com/render-html-file-expressjs/